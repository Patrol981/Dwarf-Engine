vec3 sobel(texture2D tex2D, sampler texSampler, vec2 texCoord) {
   mat3 sx = mat3(
     1.0,  2.0,  1.0,
     0.0,  0.0,  0.0,
    -1.0, -2.0, -1.0
  );
  mat3 sy = mat3(
     1.0,  0.0, -1.0,
     2.0,  0.0, -2.0,
     1.0,  0.0, -1.0
  );

  mat3 I;
  for (int i=0; i<3; i++) {
    for (int j=0; j<3; j++) {
      vec3 sample3 = texelFetch(sampler2D(tex2D, texSampler), ivec2(gl_FragCoord) + ivec2(i-1,j-1), 0).rgb;
      I[i][j] = length(sample3);
    }
  }

  float gx = dot(sx[0], I[0]) + dot(sx[1], I[1]) + dot(sx[2], I[2]);
  float gy = dot(sy[0], I[0]) + dot(sy[1], I[1]) + dot(sy[2], I[2]);

  float g = sqrt(pow(gx, 2.0)+pow(gy, 2.0));

  return vec3(g);
}

vec3 apply_sobel_filter(texture2D tex, sampler samp, vec2 texCoord) {
    // Sobel kernels
    mat3 sx = mat3(
        1.0,  2.0,  1.0,
        0.0,  0.0,  0.0,
       -1.0, -2.0, -1.0
    );
    mat3 sy = mat3(
        1.0,  0.0, -1.0,
        2.0,  0.0, -2.0,
        1.0,  0.0, -1.0
    );

    vec2 texSize = vec2(textureSize(tex, 0));
    vec2 texOffset = 1.0 / texSize; // Offset for neighboring pixels

    mat3 intensity;
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            vec2 offset = vec2(i - 1, j - 1) * texOffset;
            vec3 color = texture(sampler2D(tex, samp), texCoord + offset).rgb;
            intensity[i][j] = length(color); // Intensity as luminance
        }
    }

    // Compute gradients
    float gx = dot(sx[0], vec3(intensity[0][0], intensity[0][1], intensity[0][2])) +
               dot(sx[1], vec3(intensity[1][0], intensity[1][1], intensity[1][2])) +
               dot(sx[2], vec3(intensity[2][0], intensity[2][1], intensity[2][2]));
    float gy = dot(sy[0], vec3(intensity[0][0], intensity[0][1], intensity[0][2])) +
               dot(sy[1], vec3(intensity[1][0], intensity[1][1], intensity[1][2])) +
               dot(sy[2], vec3(intensity[2][0], intensity[2][1], intensity[2][2]));

    // Gradient magnitude as grayscale intensity
    float g = sqrt(gx * gx + gy * gy);

    return vec3(g); // Grayscale color
}
